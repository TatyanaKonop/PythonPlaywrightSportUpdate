on:
  workflow_dispatch:
    inputs:
      environment:
        required: true
        default: "prod"
        description: "Set environment, e.g. `ENV=prod or ENV=shot`"
      arguments:
        required: false
        default: "-m regression"
        description: "pytest additional arguments, e.g. `-m regression`"
      shards:
        required: true
        default: "1"
        description: "Number of shards"
jobs:
  playwright:
    name: Regression tests
    runs-on: ubuntu-latest
    container:
      image: mcr.microsoft.com/playwright/python:v1.41.0-jammy
    strategy:
      matrix:
        browser: [remote_chrome]  # Add other browsers if needed
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      - name: Install dependencies
        run: |
          python3 -m pip install -r requirements.txt
          pip install pytest-xdist
      - run: |
          if [ "${{github.event_name}}" = "schedule" ]; then
            export args="-m regression"
            export ENV="prod"
          else
            export ENV='${{github.event.inputs.environment}}'
            export args='${{github.event.inputs.arguments}}'
          fi
          echo "::set-output name=env_name::${ENV:-prod}"
          pytest ${args} --bn ${{ matrix.browser }} --alluredir=allure-results

      - name: Playwright report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: my-artifact
          path: allure-results
          retention-days: 1

  shards:
    name: Shard ${{ matrix.shard }}
    runs-on: ubuntu-latest
    needs: playwright
    strategy:
      fail-fast: false
      matrix:
        shard: [1, 2, 3, 4]  # Define the number of shards here
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.11'
      - name: Install dependencies
        run: |
          python -m pip install -r requirements.txt
          pip install pytest-xdist
      - name: Run tests
        run: pytest -n auto -o junit_family=xunit2 -o junit_directory=test-reports test_set.py
